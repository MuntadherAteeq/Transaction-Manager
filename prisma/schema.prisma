// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  name      String?
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  sessions  Session[]
  records   Record[]
}

model Session {
  id        String   @id @default(cuid())
  userId    String
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id])
}

model Record {
  id        Int      @id @default(autoincrement())
  category  String?
  name      String?  @default("Untitled")
  total     Float    @default(0)
  email     String?
  phone     String?
  address   String?
  tables    Table[]
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  desc      String?
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

model Table {
  id           Int           @id @default(autoincrement())
  recordId     Int
  name         String?       @default("Untitled")
  description  String?
  total        Decimal       @default(0)
  transactions Transaction[]
  record       Record        @relation(fields: [recordId], references: [id])
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @default(now())
}

model Transaction {
  id          Int      @id @default(autoincrement())
  tableId     Int
  amount      Decimal  @default(0)
  type        String
  description String?
  date        DateTime
  table       Table    @relation(fields: [tableId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
}
